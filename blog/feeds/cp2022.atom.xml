<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Mde.tw - cp2022</title><link href="https://mde.tw/blog/" rel="alternate"></link><link href="https://mde.tw/blog/feeds/cp2022.atom.xml" rel="self"></link><id>https://mde.tw/blog/</id><updated>2022-09-28T13:36:17+08:00</updated><entry><title>cp2022 第三週課程</title><link href="https://mde.tw/blog/2022_fall_cp2022_w3.html" rel="alternate"></link><published>2022-09-22T11:00:00+08:00</published><updated>2022-09-26T11:25:31+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-09-22:/blog/2022_fall_cp2022_w3.html</id><summary type="html">&lt;p&gt;計算機程式第三週課程內容. 各教學影片均需透過 @nfu 登錄的 Onedrive 帳號登入後, 才能觀看.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;計算機程式第三週課程內容. 各教學影片均需透過 @nfu 登錄的 Onedrive 帳號登入後, 才能觀看.&lt;/p&gt;


&lt;h1&gt;針對 Proxy 設定無法存檔&lt;/h1&gt;
&lt;p&gt;有關電腦輔助設計室中, 代理主機設定無法存檔的問題, 可以參考&lt;a href="https://nfuedu.sharepoint.com/sites/cp20222/_layouts/15/stream.aspx?id=%2Fsites%2Fcp20222%2FShared%20Documents%2Fw3%2FRecordings%2F%E3%80%8Cw3%E3%80%8D%E4%B8%AD%E7%9A%84%E6%9C%83%E8%AD%B0%2D20220922%5F094632%2D%E6%9C%83%E8%AD%B0%E9%8C%84%E8%A3%BD%2Emp4"&gt;cp2022 w3 cadlab 網路設定影片&lt;/a&gt; (必須登入 @nfu Teams 帳號) 中的說明, 主要設定流程為直接進入 Windows Registry 進行設定後, 將設定內容匯出為 .reg 檔案後, 放入隨身碟, 下一次重新開機後, 可以利用滑鼠左鍵雙點擊 .reg 檔案, 就可以完成自動設定.&lt;/p&gt;
&lt;p&gt;下載 &lt;a href="./../downloads/cadlab_network_setup.zip"&gt;cadlab_network_setup.zip&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;網誌與課程內容回顧&lt;/h1&gt;
&lt;p&gt;教學影片: &lt;a href="https://nfuedu.sharepoint.com/:v:/r/sites/cp20222/Shared%20Documents/w3/Recordings/2%E3%80%8Cw3%E3%80%8D%E8%AA%B2%E7%A8%8B%E7%B6%B2%E8%AA%8C%E8%A3%BD%E4%BD%9C%E8%88%87%E5%85%88%E5%89%8D%E8%AA%B2%E7%A8%8B%E5%85%A7%E5%AE%B9%E5%9B%9E%E9%A1%A7.mp4?csf=1&amp;amp;web=1&amp;amp;e=jHsQ7E"&gt;課程網誌製作與先前課程內容回顧&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;ethercalc 登錄與 RDT&lt;/h1&gt;
&lt;p&gt;教學影片: &lt;a href="https://nfuedu.sharepoint.com/:v:/r/sites/cp20222/Shared%20Documents/w3/Recordings/3%E3%80%8Cw3%E3%80%8Dethercalc%20%20%E7%99%BB%E9%8C%84%20Github%20%E5%B8%B3%E8%99%9F-%E9%81%A0%E7%AB%AF%E6%A1%8C%E9%9D%A2%E8%88%87%E8%99%9B%E6%93%AC%E4%B8%BB%E6%A9%9F%E4%BB%8B%E7%B4%B9.mp4?csf=1&amp;amp;web=1&amp;amp;e=JD4Qwo"&gt;ethercalc登錄 Github 帳號&lt;/a&gt; - 遠端桌面與虛擬主機介紹&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ethercalc.net/"&gt;https://ethercalc.net/&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;倉儲與 Github Pages&lt;/h1&gt;
&lt;p&gt;教學影片: &lt;a href="https://nfuedu.sharepoint.com/:v:/r/sites/cp20222/Shared%20Documents/w3/Recordings/4%E3%80%8Cw3%E3%80%8D%E8%AA%B2%E7%A8%8B%E5%80%89%E5%84%B2%E8%88%87%20Github%20Pages%20%E7%B6%B2%E9%A0%81%E8%A8%AD%E5%AE%9A%E6%95%99%E5%AD%B8.mp4?csf=1&amp;amp;web=1&amp;amp;e=5brhmf"&gt;課程倉儲與 Github Pages 網頁設定教學&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;從教務主機擷取學員名單&lt;/h1&gt;
&lt;p&gt;原先配置在 Heroku 的 [nfulist] 網際程式, 由於校務主機已經排除台灣境外網段連接, 且 Heroku 也即將終止免費帳號使用. 因此只能將程式配置在系工作站室中的電腦. 程式如下, 目前以 Ubuntu 22.04 實體主機下的 Virtualbox Win10 虛擬主機運行. 採 &lt;a href="https://github.com/Pylons/waitress"&gt;waitress&lt;/a&gt; 模式配置, 以 &lt;a href="https://nssm.cc/"&gt;nssm&lt;/a&gt; 安排成為系統服務.&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# 以 Flask 作為網際框架, 
from flask import Flask, request
# 允許跨網站擷取資料
from flask_cors import CORS

# 利用 requests 取回網站中的頁面資料
import requests
# 利用 beautifulsoup 解讀超文件網頁內容
import bs4
# 若在近端啟動也要採用 SSL 時導入
#import ssl

'''
2022 Fall 各班課程代號
1a - 2b
?semester=1111&amp;amp;courseno=0747&amp;amp;column=True 

?semester=1111&amp;amp;courseno=0761&amp;amp;column=True 

?semester=1111&amp;amp;courseno=0773&amp;amp;column=True 

?semester=1111&amp;amp;courseno=0786&amp;amp;column=True 

'''
proxies ={
'http': 'http://account:password@[2001:288:6004:17::4]:3128',
'https': 'http://account:password@[2001:288:6004:17::4]:3128'
}

app = Flask(__name__)
CORS(app)

@app.route('/studlist')
@app.route('/')
def studlist():
    semester = request.args.get('semester')
    courseno = request.args.get('courseno')
    column = request.args.get('column')

    if semester == None:
        semester = '1091'
    if courseno == None:
        courseno = '0762'

    headers = {'X-Requested-With': 'XMLHttpRequest'}

    url = 'https://qry.nfu.edu.tw/studlist_ajax.php'
    post_var = {'pselyr': semester, 'pseqno': courseno}

    # 可透過 Proxy server 執行程式
    #result = requests.post(url, data = post_var, headers = headers, proxies = proxies)
    result = requests.post(url, data = post_var, headers = headers)
    soup = bs4.BeautifulSoup(result.content, 'lxml')
    table = soup.find('table', {'class': 'tbcls'})
    data = []
    rows = table.find_all('tr')
    for row in rows:
        cols = row.find_all('td')
        cols = [ele.text.strip() for ele in cols]
        data.append([ele for ele in cols if ele]) # Get rid of empty values
    output = ""
    for i in data[2:]:
        #print(i[0])
        if column == "True":
            output +=i[0] + "&lt;/br&gt;"
        else:
            output +=i[0] + "\n"

    return output
    #return  str(pselyr) + " + " +str(pseqno)

# 即使在近端仍希望以 https 模式下執行
#context = ssl.SSLContext(ssl.PROTOCOL_TLSv1_2)
#context.load_cert_chain('localhost.crt', 'localhost.key')

if __name__ == '__main__':
    app.run(host='127.0.0.1', port=8080, debug=True)
&lt;/pre&gt;

&lt;p&gt;2022 Fall 學員名單:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://nfu.cycu.org/?semester=1111&amp;amp;courseno=0747&amp;amp;column=True"&gt;1a 計算機程式修課學員名單&lt;/a&gt; (取自教務主機)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nfu.cycu.org/?semester=1111&amp;amp;courseno=0761&amp;amp;column=True"&gt;1b 計算機程式修課學員名單&lt;/a&gt; (取自教務主機)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nfu.cycu.org/?semester=1111&amp;amp;courseno=0773&amp;amp;column=True"&gt;2a 電腦輔助設計與實習修課學員名單&lt;/a&gt; (取自教務主機)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nfu.cycu.org/?semester=1111&amp;amp;courseno=0786&amp;amp;column=True"&gt;2b 電腦輔助設計與實習修課學員名單&lt;/a&gt; (取自教務主機)&lt;/li&gt;
&lt;/ol&gt;</content><category term="cp2022"></category><category term="w3"></category></entry><entry><title>cp2022_w1</title><link href="https://mde.tw/blog/cp2022-w1.html" rel="alternate"></link><published>2022-09-01T13:00:00+08:00</published><updated>2022-09-14T20:08:21+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-09-01:/blog/cp2022-w1.html</id><summary type="html">&lt;p&gt;計算機程式課程第一週, 只有 1b 有課, 1a 因為中秋節放假.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;計算機程式課程第一週, 只有 1b 有課, 1a 因為中秋節放假.&lt;/p&gt;


&lt;h1&gt;cadlab 網路設定&lt;/h1&gt;
&lt;p&gt;目前電腦輔助設計室 (cadlab) 中絕大部分的電腦都只有一個磁區 (假如有三個磁區的電腦是上一代的舊電腦), 使用的操作系統是 Windows 10, 因為系上有四門課程在電腦輔助設計室上課時, 採用的是純 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv6"&gt;IPv6&lt;/a&gt; 網路連線, 因此各位學員在接觸到計算機程式課程時, 必須學會設定電腦系統的網路連線.&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://zh.wikipedia.org/zh-tw/IPv4"&gt;IPv4&lt;/a&gt; 與 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv6"&gt;IPv6&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://zh.wikipedia.org/zh-tw/IPv4"&gt;IPv4&lt;/a&gt; 與 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv6"&gt;IPv6&lt;/a&gt; 是兩種不相容的網路協定. 目前除了計算機程式課程, 還有網際內容管理、電腦輔助設計與實習以及協同產品設計實習等課程, 上課時都將電腦輔助設計室的連外網路直接與系上主幹連接. 目的是希望擴大每一台電腦的網路頻寬, 可以無需透過 &lt;a href="https://en.wikipedia.org/wiki/Network_address_translation"&gt;NAT&lt;/a&gt; 轉址後再連接到系上.&lt;/p&gt;
&lt;p&gt;但是這樣做, 所要付出的代價是, 首先, 每一台電腦都直接以 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv6"&gt;IPv6&lt;/a&gt; 外部網路位址與網際網路相通, 若此時電腦中的 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv4"&gt;IPv4&lt;/a&gt; 也同時開啟的話, 安裝在操作系統中的某些軟體會以為已經取得 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv4"&gt;IPv4&lt;/a&gt; 的外部網路位址 (其實並沒有, 因此系上已經沒有額外的外部 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv4"&gt;IPv4&lt;/a&gt; 網路位址), 而啟動網路攻擊. 因而導致操作系統所安裝的防毒軟體作動, 關閉電腦的所有對外網路連線.&lt;/p&gt;
&lt;p&gt;結論是: 當電腦輔助設計室網路線直接連到外網主幹時, 要設法關閉 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv4"&gt;IPv4&lt;/a&gt; 網路連線, 否則無法使用網路.&lt;/p&gt;
&lt;p&gt;其次, &lt;a href="https://zh.wikipedia.org/zh-tw/IPv6"&gt;IPv6&lt;/a&gt; 網路協定雖然已經逐漸普及, 但目前仍有許多網站只支援 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv4"&gt;IPv4&lt;/a&gt; 網路協定, 因此在純 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv6"&gt;IPv6&lt;/a&gt; 網路設定下, 若要連接至某些只支援 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv4"&gt;IPv4&lt;/a&gt; 的電腦或網站, 必須透過代理主機 (Proxy Server, 這裡所使用的代理主機執行 &lt;a href="http://www.squid-cache.org/"&gt;Squid&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;學習議題&lt;/h2&gt;
&lt;p&gt;為什麼會有 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv4"&gt;IPv4&lt;/a&gt; 與 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv6"&gt;IPv6&lt;/a&gt; 兩種網路協定並存?&lt;/p&gt;
&lt;p&gt;上計算機程式課程時, 當使用瀏覽器與執行 git 指令時, 該如何正確設定網路協定?&lt;/p&gt;
&lt;h1 id="learnbrython"&gt;線上學習 Brython&lt;/h1&gt;

&lt;p&gt;當你完成電腦輔助設計室中的&lt;a href="https://mde.tw/blog/2022-Fall-Intro-to-computer-programming.html#networksetup"&gt;網路設定&lt;/a&gt;後, 就可以利用瀏覽器連線到&lt;a href="https://mde.tw/content/Python.html"&gt;這裡&lt;/a&gt;, 直接在線上學習 &lt;a href="https://brython.info/"&gt;Brython&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;學員課程網頁&lt;/h1&gt;
&lt;p&gt;cp2022 課程中的 cp 為 computer programming 的縮寫, 每一位學員各自建立 Github 帳號後, 將在 &lt;a href="https://ethercalc.net/"&gt;https://ethercalc.net/&lt;/a&gt; 中登錄用於課程的 Github 帳號. 之後將配合 Github Classroom 建立學員課程網頁. 此一網頁倉儲分為靜態與動態等兩個部分, 靜態網頁是配合 Github Pages, 直接由 Github.com 提供對應網址, 而動態網頁則可在近端用於網站內容編輯改版, 也可以在 Windows 或 Ubuntu 操作系統中進行配置, 成為可多人協同維護的網際內容管理系統.&lt;/p&gt;
&lt;p&gt;完成配置後的學員課程網頁, 將位於組織 (organization) 名稱為 mdecp2022 的帳號下, 且倉儲名稱將為: site-個人帳號名稱 (site 為 assignment 名稱). 至於個人 Github 帳號與學號的對應關聯則將登錄於 &lt;a href="https://github.com/mdecycu/studlist/tree/main/2022fall"&gt;https://github.com/mdecycu/studlist/tree/main/2022fall&lt;/a&gt; 目錄中的班級對應檔案.&lt;/p&gt;
&lt;p&gt;建立個人課程網頁示範:&lt;/p&gt;
&lt;h1&gt;有關筆記型電腦&lt;/h1&gt;
&lt;p&gt;綜一館八樓的電腦輔助設計室所配置的 PC, 雖然裝有還原卡, 但只要配合 USB 隨身碟與可攜套件, 應該足以應付 cp2022 計算機程式課程所需. 所以一般並不建議大一就購買筆記型電腦, 而是先善用系上所提供的 PC. 至於課外使用時段, 請參考系上電腦教室借用規定辦理, 通常週四與週五晚間未排課時段可以外借.&lt;/p&gt;
&lt;p&gt;至於符合機械設計工程系需求的筆記型電腦, 一般建議 i7 等級以上, 16 GB 記憶體, 並配置中階以上獨立顯卡. Windows 操作系統則建議使用專業 (Professional) 以上版本.&lt;/p&gt;
&lt;p&gt;校外電腦連接部分, 則需要每學年申請 VPN 使用授權, 下載學校購買的軟體或電子書, 只要設定校內 Proxy 即可, 但若要連網認證 SolidWorks 或 Matlab, 則需透過校內 VPN 連網.&lt;/p&gt;
&lt;h1&gt;Python Learning&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://coderslegacy.com/python/learning-the-basics/"&gt;https://coderslegacy.com/python/learning-the-basics/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://coderslegacy.com/python/python-intermediate/"&gt;https://coderslegacy.com/python/python-intermediate/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://coderslegacy.com/python/python-advanced/"&gt;https://coderslegacy.com/python/python-advanced/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Coding with Python and Repl.it: &lt;a href="https://i.ritzastatic.com/codewithreplit/e-books/coding-with-replit-export.pdf"&gt;https://i.ritzastatic.com/codewithreplit/e-books/coding-with-replit-export.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Learn Python the right way: &lt;a href="https://learnpythontherightway.com/#read"&gt;https://learnpythontherightway.com/#read&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.freecodecamp.org/news/how-to-use-replit/"&gt;https://www.freecodecamp.org/news/how-to-use-replit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python curriculum: &lt;a href="https://hackpacific.gitbooks.io/pythonium/content/"&gt;https://hackpacific.gitbooks.io/pythonium/content/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.codementor.io/@garethdwyer/introduction-to-machine-learning-with-python-and-repl-it-rln7ywkhc"&gt;https://www.codementor.io/@garethdwyer/introduction-to-machine-learning-with-python-and-repl-it-rln7ywkhc&lt;/a&gt;&lt;/p&gt;</content><category term="cp2022"></category><category term="portable python"></category><category term="cp2022"></category></entry><entry><title>建立可攜 Python 系統</title><link href="https://mde.tw/blog/Create-a-portable-python-system.html" rel="alternate"></link><published>2022-08-23T11:00:00+08:00</published><updated>2022-09-15T22:01:40+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-08-23:/blog/Create-a-portable-python-system.html</id><summary type="html">&lt;p&gt;這裡所謂的可攜 Python 系統, 是指能夠放入 USB 隨身碟中的 Python 解譯器. 整個過程分為三個部分. 包括 Python 核心程式, pip 以及安裝常用模組等過程.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;這裡所謂的可攜 Python 系統, 是指能夠放入 USB 隨身碟中的 Python 解譯器. 整個過程分為三個部分. 包括 Python 核心程式, pip 以及安裝常用模組等過程.&lt;/p&gt;


&lt;h1&gt;動機&lt;/h1&gt;
&lt;p&gt;由於電腦輔助設計室中的電腦配置防寫系統, 大約每半年才更新一次, 為了及時配合不同課程所需,除了使用電腦操作系統中所安裝的 Python 外, 通常建議學員自行建立可直接放入 USB 隨身碟啟動的可攜 Python 解譯系統.&lt;/p&gt;
&lt;p&gt;使用可攜 Python 解譯系統的好處是, 可以在任何的 64 位元 Windows 操作系統中使用相同配置的 Python 解譯器. 且可同時將 portable git 與 scite 納入可攜系統, 採可攜的方式執行程式編寫, 並維護電腦輔助設計流程中所建立 github 倉儲內容.&lt;/p&gt;
&lt;h1&gt;建立步驟&lt;/h1&gt;
&lt;h2&gt;核心程式&lt;/h2&gt;
&lt;p&gt;已知從 &lt;a href="https://www.python.org/ftp/python/"&gt;https://www.python.org/ftp/python/&lt;/a&gt; 可以下載各版本的 Python .msi 安裝檔案, 且所下載的 .msi 可以直接以 &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/msiexec"&gt;msiexec.exe&lt;/a&gt; 解開內容, 而不需要經過操作系統的套件安裝流程.&lt;/p&gt;
&lt;p&gt;由於以下 Python 程式可以利用現有舊版的 Python 解譯器執行, 下載並解開最新版的 Python 可攜解譯器, 因此只要進入 cmd 命令視窗, 選擇所要配置 Portable Python 的目錄, 即可直接執行後完成第一階段的 Python 核心程式的配置.&lt;/p&gt;
&lt;p&gt;這裡以 Python 3.10.6 為例, 下載並解開所需的 Python 核心程式內容:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
import urllib.request
import os

# basic files for Python installation
py_list = ["core", "dev", "exe", "lib", "tcltk", "tools"]
# Python version
version = "3.10.6"
# location for Portable Python
path = "c:\\tmp\\Python310"
# Python msi download URL
ftp = "https://www.python.org/ftp/python/" + version + "/amd64/"
extract_path = path + "\\extract"
# create directory
try:
    os.mkdir(path)
except:
    # path exists
    pass
# get Python installation msi files and extract into target dir
for i in py_list:
    filename = i + ".msi"
    url = ftp + filename
    # download basic python msi file
    urllib.request.urlretrieve(url, path+ "\\"+ filename)
    os.system("msiexec.exe /a " + path + "\\" + i + ".msi /qb targetdir=" + extract_path)
    # delete msi file
    os.remove(extract_path + "\\" + i + ".msi")
&lt;/pre&gt;

&lt;p&gt;執行結束後, path (在上述範例 path 為 "c:/tmp/Python310") 目錄中的 extract 子目錄即為可攜 Python 解譯器檔案. &lt;/p&gt;
&lt;h2&gt;安裝 pip&lt;/h2&gt;
&lt;p&gt;從 &lt;a href="https://bootstrap.pypa.io/get-pip.py"&gt;https://bootstrap.pypa.io/get-pip.py&lt;/a&gt; 可以下載 get-pip.py 檔案, 利用前面完成的 Python 核心程式可以在可攜 Python 程式的架構下安裝 pip 工具, 但必須先讓可攜的核心程式得以運作, 這時需要安排 start.bat 與 stop.bat&lt;/p&gt;
&lt;p&gt;安裝 pip 時, 先以 cmd 進入命令列視窗, 然後更換目錄至 get-pip.py 所在目錄後, 以 python get-pip.py 進行安裝.&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
Microsoft Windows [版本 10.0.19042.1706]
(c) Microsoft Corporation. 著作權所有，並保留一切權利。

C:\tmp\portable_python_3.10.6&gt;cd tmp

C:\tmp\portable_python_3.10.6\tmp&gt;python get-pip.py
Collecting pip
  Downloading pip-22.2.2-py3-none-any.whl (2.0 MB)
     ---------------------------------------- 2.0/2.0 MB 1.5 MB/s eta 0:00:00
Collecting setuptools
  Downloading setuptools-65.2.0-py3-none-any.whl (1.2 MB)
     ---------------------------------------- 1.2/1.2 MB 2.7 MB/s eta 0:00:00
Collecting wheel
  Downloading wheel-0.37.1-py2.py3-none-any.whl (35 kB)
Installing collected packages: wheel, setuptools, pip
Successfully installed pip-22.2.2 setuptools-65.2.0 wheel-0.37.1
&lt;/pre&gt;

&lt;p&gt;可攜 Python 安裝 pip 後, 就可以利用 pip list 列出目前所安裝的模組, 並接著安裝 cmsimde 所需模組.&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
C:\tmp\portable_python_3.10.6\tmp&gt;pip list
Package    Version
---------- -------
pip        22.2.2
setuptools 65.2.0
wheel      0.37.1

C:\tmp\portable_python_3.10.6\tmp&gt;pip install flask flask_cors bs4 lxml pelican markdown leo pyopenssl
&lt;/pre&gt;

&lt;p&gt;以下為用來啟動可攜 Python 的批次檔案:&lt;/p&gt;
&lt;p&gt;start.bat&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
@echo off

set PATH=%cd%

set HomePath=%cd%\home_ipv6
set HomeDrive=%cd%\home_ipv6
set Home=%cd%\home_ipv6
set USERPROFILE=%cd%\home_ipv6

REM 將系統 Python 程式的 io 設為 utf-8
set PYTHONIOENCODING="utf-8"

set PYTHONPATH=%cd%\Python310\DLLs;%cd%\Python310\Lib;%cd%\Python310\Lib\site-packages;
set PYTHONHOME=%cd%\Python310

REM for putty
set GIT_SSH=%cd%\putty\plink.exe

REM 設定跟 Python 有關的命令搜尋路徑
set path_python=%cd%\Python310;%cd%\Python310\Scripts;
REM 設定跟Git 有關的命令搜尋路徑
set path_git=%cd%\portablegit_2.31.1\bin;
set path_tcc=%cd%\tcc;

REM for execute scite directly
set path_scite=%cd%\wScite502\;

path=%cd%;%path_python%;%path_git%;%path_tcc%;%path_scite%;%path%;

start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe

start /MIN %cd%\wScite502\SciTE.exe
start /MIN %cd%\wScite502\SciTE.exe

Exit
&lt;/pre&gt;

&lt;p&gt;以下為關閉可攜 Python 的批次檔:&lt;/p&gt;
&lt;p&gt;stop.bat&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
@echo off

taskkill /IM python.exe /F
taskkill /IM pythonw.exe /F
taskkill /IM scite.exe /F
taskkill /IM cmd.exe /F

EXIT
&lt;/pre&gt;

&lt;h2&gt;安裝模組&lt;/h2&gt;
&lt;p&gt;pip install flask flask_cors bs4 lxml pelican markdown leo pyopenssl&lt;/p&gt;
&lt;p&gt;上述配置 pip 與模組&lt;a href="./../downloads/install_get-pip.py_and_cmsimde_modules.txt"&gt;安裝詳細過程紀錄&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;下載 &lt;a href="https://gmnfuedutw-my.sharepoint.com/:u:/g/personal/yen_gm_nfu_edu_tw/ETQ0EKIxNeVJhfs8t2NvsCgBn0NmW_sx4OuM5_YR2CSFFQ?e=fywLSa"&gt;portable_python_3.10.6.7z&lt;/a&gt; (for @gm users only) / 下載 &lt;a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EZnrBE0Jo8tAtaiFN70ZXycBTQkPhU0dPnEiy_4Uuj9ayg?e=eJu5Tg"&gt;portable_python_3.10.6.7z for @nfu&lt;/a&gt;&lt;/p&gt;</content><category term="cp2022"></category><category term="portable-Python"></category><category term="cp2022"></category></entry><entry><title>2022 Fall CP 課程</title><link href="https://mde.tw/blog/2022-Fall-Intro-to-computer-programming.html" rel="alternate"></link><published>2022-08-19T11:00:00+08:00</published><updated>2022-09-28T13:36:17+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-08-19:/blog/2022-Fall-Intro-to-computer-programming.html</id><summary type="html">&lt;p&gt;2022 Fall 計算機程式的課程進度將放在 Weblog, 並且使用 mdecycu At cycu 登記 disqus. 所有與課程相關的問題, 都希望在各週 Weblog 下方的 disqus 詢答.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2022 Fall 計算機程式的課程進度將放在 Weblog, 並且使用 mdecycu At cycu 登記 disqus. 所有與課程相關的問題, 都希望在各週 Weblog 下方的 disqus 詢答.&lt;/p&gt;


&lt;h1&gt;課程評分&lt;/h1&gt;
&lt;p&gt;cp2022 課程評分項目請參考: &lt;a href="https://mde.tw/content/cp-syllabus.html"&gt;syllabus&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="commandline"&gt;命令提示字元&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/cmd"&gt;cmd&lt;/a&gt; (Command Line) 指令, 是 &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/windows-commands"&gt;Windows 命令&lt;/a&gt; 中的一種. 常用的命令提示字元視窗中的指令包括:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/echo"&gt;echo&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/dir"&gt;dir&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/cd"&gt;cd&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/ping"&gt;ping&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/set_1"&gt;set&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/rem"&gt;rem&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/start"&gt;start&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/path"&gt;path&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/reg"&gt;reg&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/exit"&gt;exit&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/taskkill"&gt;taskkill&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/powershell"&gt;powershell&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="networksetup"&gt;網路環境設定&lt;/h2&gt;

&lt;p&gt;由於希望能夠讓電腦輔助設計室中使用純 &lt;a href="https://en.wikipedia.org/wiki/IPv6"&gt;IPv6&lt;/a&gt; 網路設定上網, 開機啟動後, 可採管理員模式執行下列 batch file 進行&lt;a href="https://www.youtube.com/watch?v=DDIQTTk6HZs"&gt;網路環境設定&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;因為在執行過程中, 需要利用 &lt;a href="https://docs.microsoft.com/zh-tw/powershell/scripting/learn/ps101/00-introduction?view=powershell-7.2"&gt;Powershell 命令&lt;/a&gt; 關閉 IPv4 網路協定, 並開啟 IPv6 網路協定, 需要以管理員模式執行才能順利完成.&lt;/p&gt;
&lt;p&gt;1_ipv6_network_setup.bat 通常放在隨身碟最外部, 且三個檔案放在同一目錄.&lt;/p&gt;
&lt;pre class="brush:jscript"&gt;
REM Get-ExecutionPolicy -List
REM Set-ExecutionPolicy RemoteSigned
echo "disable ipv4 and setup proxy for ipv6"
SET CurrentDir=%~dp0
%windir%\system32\reg.exe import %CurrentDir%1_2022_cadlab_network_setup.reg
REM powershell -noexit -executionpolicy bypass -File %CurrentDir%1_disable_ipv4.ps1
powershell -executionpolicy bypass -File %CurrentDir%1_disable_ipv4.ps1
exit
&lt;/pre&gt;

&lt;p&gt;執行時, 需要 1_2022_cadlab_network_setup.reg 與 1_disable_ipv4.ps1 兩個檔案:&lt;/p&gt;
&lt;p&gt;1_2022_cadlab_network_setup.reg 主要是關閉自動偵測 &lt;a href="https://en.wikipedia.org/wiki/Proxy_server"&gt;proxy server&lt;/a&gt;, 且手動設定代理主機.&lt;/p&gt;
&lt;pre class="brush:jscript"&gt;
Windows Registry Editor Version 5.00

 [HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings]
 ; disable AutoDetect
"AutoDetect"=dword:00000000
"MigrateProxy"=dword:00000001
; enable Proxy
"ProxyEnable"=dword:00000001 
"ProxyHttp1.1"=dword:00000000 
"ProxyServer"="http://[2001:288:6004:17::42]:3128"
"ProxyOverride"="localhost;"
&lt;/pre&gt;

&lt;p&gt;執行 1_2022_cadlab_network_setup.reg, 只需要點擊滑鼠左鍵兩次就可以執行.&lt;/p&gt;
&lt;p&gt;1_disable_ipv4.ps1 為 &lt;a href="https://docs.microsoft.com/zh-tw/powershell/scripting/learn/ps101/00-introduction?view=powershell-7.2"&gt;Powershell 命令&lt;/a&gt;, 主要將所有網路卡上的 &lt;a href="https://en.wikipedia.org/wiki/IPv4"&gt;IPv4&lt;/a&gt; 網路設定取消 (因為現階段所安裝的某套件會啟動網路攻擊, 透過 &lt;a href="https://en.wikipedia.org/wiki/IPv4"&gt;IPv4&lt;/a&gt; 網路協定嘗試與外部網站連結取得後門權限). &lt;/p&gt;
&lt;p&gt;以下 &lt;a href="https://docs.microsoft.com/zh-tw/powershell/scripting/learn/ps101/00-introduction?view=powershell-7.2"&gt;Powershell 命令&lt;/a&gt; 會自動關閉 IPv4 網路協定, 然後開啟 IPv6 網路協定:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
Disable-NetAdapterBinding -Name "*" -ComponentID ms_tcpip
Enable-NetAdapterBinding -Name "*" -ComponentID ms_tcpip6
&lt;/pre&gt;

&lt;p&gt;上述相關設定檔案: &lt;a href="./../downloads/cadlab_network_setup.zip"&gt;cadlab_network_setup.zip&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;W1 教學影片&lt;/h2&gt;
&lt;script&gt;
var winkVideoData_w1_1 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 接下來將 mp4 檔案從 downloads 目錄取出 --&gt;
&lt;div class="winkVideoContainerClass"&gt;&lt;video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData_w1_1" height="600" muted="true" width="800"&gt;
&lt;source src="./../downloads/cp/cp_w1_1.mp4" type="video/mp4"/&gt;&lt;/video&gt;
&lt;/div&gt;

&lt;h1&gt;建立 Github 帳號&lt;/h1&gt;
&lt;p&gt;請尚未建立 Github 帳號的學員, 至 &lt;a href="https://github.com/join"&gt;https://github.com/join&lt;/a&gt; 申請帳號. 課程評分項目將包含利用 &lt;a href="https://classroom.github.com"&gt;Github Classroom&lt;/a&gt; 建立的倉儲與網站內容 (透過 invite link). 2022fall Github 帳號與學號對照的倉儲位於 &lt;a href="https://github.com/mdecycu/studlist/tree/main/2022fall"&gt;https://github.com/mdecycu/studlist/tree/main/2022fall&lt;/a&gt;, w2 起將利用 &lt;a href="https://ethercalc.net/"&gt;https://ethercalc.net/&lt;/a&gt; 在線由各學員自行輸入, 之後若 Github 更動, 則可以透過 &lt;a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests"&gt;Pull Requests&lt;/a&gt; 提出修改請求.&lt;/p&gt;
&lt;h1&gt;建立 Onedrive 帳號&lt;/h1&gt;
&lt;p&gt;請尚未建立 Onedrive 帳號的學員登入 @nfu 帳號後, 至 &lt;a href="https://www.microsoft.com/zh-tw/education/products/office"&gt;https://www.microsoft.com/zh-tw/education/products/office&lt;/a&gt;, 以 @nfu 帳號申請 Onedrive 5TB 儲存權限. 課程中所提供的檔案, 需要登入以 @nfu 註冊的 Onedrive 帳號後, 才能下載.&lt;/p&gt;
&lt;h1&gt;利用 &lt;a href="https://github.com"&gt;Github&lt;/a&gt; 建立網頁&lt;/h1&gt;
&lt;p&gt;只要在 &lt;a href="https://github.com"&gt;Github&lt;/a&gt; 倉儲中放入 &lt;a href="https://en.wikipedia.org/wiki/HTML"&gt;HTML&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/CSS"&gt;css&lt;/a&gt; 與 &lt;a href="https://en.wikipedia.org/wiki/JavaScript"&gt;Javascript&lt;/a&gt;, 並且設定 &lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt; 對應的分支, &lt;a href="https://github.com"&gt;Github&lt;/a&gt; 就會給定 Github_帳號.github.io/倉儲名稱 作為網址 (各學員課程網址將為: https://mdecp2022.github.io/site-學員_Github_帳號), 以 WWW 伺服器 serve 使用者所提供的網頁內容.&lt;/p&gt;
&lt;p&gt;除了配置在 &lt;a href="https://classroom.github.com"&gt;Github Classroom&lt;/a&gt; 的課程倉儲與網頁外, 學員也可以在登入 &lt;a href="https://github.com"&gt;Github&lt;/a&gt; 後, 利用 &lt;a href="https://github.com/mdecycu/cmsite"&gt;https://github.com/mdecycu/cmsite&lt;/a&gt; 作為 &lt;a href="https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-repository-from-a-template"&gt;template&lt;/a&gt;, 使用 &lt;a href="https://pages.github.com/"&gt;https://pages.github.com/&lt;/a&gt; 建立個人網頁, 並利用網頁 (https://Github_帳號.github.io) 建立個人簡歷 (&lt;a href="https://www.thebalancecareers.com/cv-vs-resume-2058495"&gt;Curriculum Vitae&lt;/a&gt;) 網站.&lt;/p&gt;
&lt;h2&gt;維護 &lt;a href="https://github.com"&gt;Github&lt;/a&gt; 上的網頁&lt;/h2&gt;
&lt;p&gt;在近端將動態網頁轉為靜態網頁後, &lt;a href="https://github.com/mdecycu/cmsimde/blob/4cf035f4dc75bafc2791b67e630ee34533ae50c4/up_dir/acp.bat"&gt;acp&lt;/a&gt; 至 &lt;a href="https://github.com"&gt;Github&lt;/a&gt; 倉儲.&lt;/p&gt;
&lt;h2&gt;Computer 簡介&lt;/h2&gt;
&lt;p&gt;以下資料取自: &lt;a href="https://mde.tw/content/Computer.html"&gt;https://mde.tw/content/Computer.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A computer is a digital electronic machine that can be programmed to carry out sequences of arithmetic or logical operations (computation) automatically. Modern computers can perform generic sets of operations known as programs. These programs enable computers to perform a wide range of tasks. A computer system is a "complete" computer that includes the hardware, operating system (main software), and peripheral equipment needed and used for "full" operation. This term may also refer to a group of computers that are linked and function together, such as a computer network or computer cluster.&lt;/p&gt;
&lt;p&gt;A broad range of industrial and consumer products use computers as control systems. Simple special-purpose devices like microwave ovens and remote controls are included, as are factory devices like industrial robots and computer-aided design, as well as general-purpose devices like personal computers and mobile devices like smartphones. Computers power the Internet, which links billions of other computers and users.&lt;/p&gt;
&lt;p&gt;Early computers were meant to be used only for calculations. Simple manual instruments like the abacus have aided people in doing calculations since ancient times. Early in the Industrial Revolution, some mechanical devices were built to automate long tedious tasks, such as guiding patterns for looms. More sophisticated electrical machines did specialized analog calculations in the early 20th century. The first digital electronic calculating machines were developed during World War II. The first semiconductor transistors in the late 1940s were followed by the silicon-based MOSFET (MOS transistor) and monolithic integrated circuit (IC) chip technologies in the late 1950s, leading to the microprocessor and the microcomputer revolution in the 1970s. The speed, power and versatility of computers have been increasing dramatically ever since then, with transistor counts increasing at a rapid pace (as predicted by Moore's law), leading to the Digital Revolution during the late 20th to early 21st centuries.&lt;/p&gt;
&lt;p&gt;Conventionally, a modern computer consists of at least one processing element, typically a central processing unit (CPU) in the form of a microprocessor, along with some type of computer memory, typically semiconductor memory chips. The processing element carries out arithmetic and logical operations, and a sequencing and control unit can change the order of operations in response to stored information. Peripheral devices include input devices (keyboards, mice, joystick, etc.), output devices (monitor screens, printers, etc.), and input/output devices that perform both functions (e.g., the 2000s-era touchscreen). Peripheral devices allow information to be retrieved from an external source and they enable the result of operations to be saved and retrieved. &lt;/p&gt;
&lt;h2&gt;Program 簡介&lt;/h2&gt;
&lt;p&gt;以下資料取自: &lt;a href="https://mde.tw/content/Program.html"&gt;https://mde.tw/content/Program.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A computer program is a sequence or set of instructions in a programming language for a computer to execute. Computer programs are one component of software, which also includes documentation and other intangible components.&lt;/p&gt;
&lt;p&gt;A computer program in its human-readable form is called source code. Source code needs another computer program to execute because computers can only execute their native machine instructions. Therefore, source code may be translated to machine instructions using the language's compiler. (Machine language programs are translated using an assembler.) The resulting file is called an executable. Alternatively, source code may execute within the language's interpreter.&lt;/p&gt;
&lt;p&gt;If the executable is requested for execution, then the operating system loads it into memory and starts a process. The central processing unit will soon switch to this process so it can fetch, decode, and then execute each machine instruction.&lt;/p&gt;
&lt;p&gt;If the source code is requested for execution, then the operating system loads the corresponding interpreter into memory and starts a process. The interpreter then loads the source code into memory to translate and execute each statement. Running the source code is slower than running an executable. Moreover, the interpreter must be installed on the computer. &lt;/p&gt;
&lt;h2&gt;Python 簡介&lt;/h2&gt;
&lt;p&gt;以下資料取自: &lt;a href="https://en.wikipedia.org/wiki/Python_(programming_language)"&gt;https://en.wikipedia.org/wiki/Python_(programming_language)&lt;/a&gt;, 充分了解上述內容後, 可進入 &lt;a href="https://mde.tw/content/Python.html"&gt;https://mde.tw/content/Python.html&lt;/a&gt; 開始練習如何根據需求編寫 Python 程式.&lt;/p&gt;
&lt;p&gt;Python is a high-level, interpreted, general-purpose programming language. Its design philosophy emphasizes code readability with the use of significant indentation.&lt;/p&gt;
&lt;p&gt;Python is dynamically-typed and garbage-collected. It supports multiple programming paradigms, including structured (particularly procedural), object-oriented and functional programming. It is often described as a "batteries included" language due to its comprehensive standard library.&lt;/p&gt;
&lt;p&gt;Guido van Rossum began working on Python in the late 1980s as a successor to the ABC programming language and first released it in 1991 as Python 0.9.0. Python 2.0 was released in 2000 and introduced new features such as list comprehensions, cycle-detecting garbage collection, reference counting, and Unicode support. Python 3.0, released in 2008, was a major revision that is not completely backward-compatible with earlier versions. Python 2 was discontinued with version 2.7.18 in 2020.&lt;/p&gt;
&lt;p&gt;Python consistently ranks as one of the most popular programming languages.&lt;/p&gt;</content><category term="cp2022"></category><category term="cp2022"></category><category term="syllabus"></category></entry></feed>